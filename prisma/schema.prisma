generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Members {
  id            String      @id @default(uuid())
  email         String      @unique
  password      String
  cash          Int         @default(0)
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt @default(now())
  deleted_at     DateTime?
  participations UserQuestionParticipations[]
  transactions  CashTransactions[]
  @@map("members")
}

model Questions {
  id            String      @id @default(uuid())
  title         String
  answer        String
  mid           String
  quantity      Int
  type          String
  created_at     DateTime    @default(now())
  updated_at     DateTime    @updatedAt @default(now())
  deleted_at     DateTime?
  participations UserQuestionParticipations[]
  @@map("questions")
}

model UserQuestionParticipations {
  id                  String      @id @default(uuid())
  userId              String
  questionId          String
  participationDateTime DateTime
  member              Members     @relation(fields: [userId], references: [id])
  question            Questions   @relation(fields: [questionId], references: [id])
  created_at           DateTime    @default(now())
  updated_at           DateTime    @updatedAt @default(now())
  deleted_at           DateTime?
  @@map("user_question_participations")
}

model CashTransactions {
  id                  String      @id @default(uuid())
  userId              String
  amount              Int
  transactionDateTime DateTime
  description         String?
  member              Members     @relation(fields: [userId], references: [id])
  created_at           DateTime    @default(now())
  updated_at           DateTime    @updatedAt @default(now())
  deleted_at           DateTime?
  @@map("cash_transactions")
}


